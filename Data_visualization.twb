<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0515.0324                               -->
<workbook original-version='18.1' source-build='2024.1.3 (20241.24.0515.0324)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <Heatmap />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='Book1_17260047235500' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='cleaned_db_data - Edit_for_Tableau' inline='true' name='federated.1xjxkf00b7ruq41h08w0z0m83ysi' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='cleaned_db_data - Edit_for_Tableau' name='textscan.0dymbkd09l4ooy1akmzeh13hz6ls'>
            <connection class='textscan' directory='C:/Users/hyoni/Documents/WBS - Data Analystics/0_Final_Project/data/save_from_python' filename='cleaned_db_data - Edit_for_Tableau.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0dymbkd09l4ooy1akmzeh13hz6ls' name='cleaned_db_data - Edit_for_Tableau.csv' table='[cleaned_db_data - Edit_for_Tableau#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='ID' ordinal='0' />
            <column datatype='string' name='line' ordinal='1' />
            <column datatype='string' name='path' ordinal='2' />
            <column datatype='integer' name='evaNr' ordinal='3' />
            <column datatype='integer' name='category' ordinal='4' />
            <column datatype='string' name='station' ordinal='5' />
            <column datatype='string' name='state' ordinal='6' />
            <column datatype='string' name='city' ordinal='7' />
            <column datatype='integer' name='zip' ordinal='8' />
            <column datatype='real' name='long' ordinal='9' />
            <column datatype='real' name='lat' ordinal='10' />
            <column datatype='datetime' name='arrivalPlan' ordinal='11' />
            <column datatype='datetime' name='departurePlan' ordinal='12' />
            <column datatype='datetime' name='arrivalChange' ordinal='13' />
            <column datatype='datetime' name='departureChange' ordinal='14' />
            <column datatype='integer' name='arrivaDelayM' ordinal='15' />
            <column datatype='integer' name='departureDelayM' ordinal='16' />
            <column datatype='string' name='info' ordinal='17' />
            <column datatype='string' name='arrivalDelayCheck' ordinal='18' />
            <column datatype='string' name='departureDelayCheck' ordinal='19' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0dymbkd09l4ooy1akmzeh13hz6ls' name='cleaned_db_data - Edit_for_Tableau.csv' table='[cleaned_db_data - Edit_for_Tableau#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='ID' ordinal='0' />
            <column datatype='string' name='line' ordinal='1' />
            <column datatype='string' name='path' ordinal='2' />
            <column datatype='integer' name='evaNr' ordinal='3' />
            <column datatype='integer' name='category' ordinal='4' />
            <column datatype='string' name='station' ordinal='5' />
            <column datatype='string' name='state' ordinal='6' />
            <column datatype='string' name='city' ordinal='7' />
            <column datatype='integer' name='zip' ordinal='8' />
            <column datatype='real' name='long' ordinal='9' />
            <column datatype='real' name='lat' ordinal='10' />
            <column datatype='datetime' name='arrivalPlan' ordinal='11' />
            <column datatype='datetime' name='departurePlan' ordinal='12' />
            <column datatype='datetime' name='arrivalChange' ordinal='13' />
            <column datatype='datetime' name='departureChange' ordinal='14' />
            <column datatype='integer' name='arrivaDelayM' ordinal='15' />
            <column datatype='integer' name='departureDelayM' ordinal='16' />
            <column datatype='string' name='info' ordinal='17' />
            <column datatype='string' name='arrivalDelayCheck' ordinal='18' />
            <column datatype='string' name='departureDelayCheck' ordinal='19' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cleaned_db_data - Edit_for_Tableau.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ID]</local-name>
            <parent-name>[cleaned_db_data - Edit_for_Tableau.csv]</parent-name>
            <remote-alias>ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_db_data - Edit_for_Tableau.csv_94D25421F7F44052866567B647DFD75C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>line</remote-name>
            <remote-type>129</remote-type>
            <local-name>[line]</local-name>
            <parent-name>[cleaned_db_data - Edit_for_Tableau.csv]</parent-name>
            <remote-alias>line</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_db_data - Edit_for_Tableau.csv_94D25421F7F44052866567B647DFD75C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>path</remote-name>
            <remote-type>129</remote-type>
            <local-name>[path]</local-name>
            <parent-name>[cleaned_db_data - Edit_for_Tableau.csv]</parent-name>
            <remote-alias>path</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_db_data - Edit_for_Tableau.csv_94D25421F7F44052866567B647DFD75C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>evaNr</remote-name>
            <remote-type>20</remote-type>
            <local-name>[evaNr]</local-name>
            <parent-name>[cleaned_db_data - Edit_for_Tableau.csv]</parent-name>
            <remote-alias>evaNr</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_db_data - Edit_for_Tableau.csv_94D25421F7F44052866567B647DFD75C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category</remote-name>
            <remote-type>20</remote-type>
            <local-name>[category]</local-name>
            <parent-name>[cleaned_db_data - Edit_for_Tableau.csv]</parent-name>
            <remote-alias>category</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_db_data - Edit_for_Tableau.csv_94D25421F7F44052866567B647DFD75C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>station</remote-name>
            <remote-type>129</remote-type>
            <local-name>[station]</local-name>
            <parent-name>[cleaned_db_data - Edit_for_Tableau.csv]</parent-name>
            <remote-alias>station</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_db_data - Edit_for_Tableau.csv_94D25421F7F44052866567B647DFD75C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[cleaned_db_data - Edit_for_Tableau.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_db_data - Edit_for_Tableau.csv_94D25421F7F44052866567B647DFD75C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[cleaned_db_data - Edit_for_Tableau.csv]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_db_data - Edit_for_Tableau.csv_94D25421F7F44052866567B647DFD75C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zip</remote-name>
            <remote-type>20</remote-type>
            <local-name>[zip]</local-name>
            <parent-name>[cleaned_db_data - Edit_for_Tableau.csv]</parent-name>
            <remote-alias>zip</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_db_data - Edit_for_Tableau.csv_94D25421F7F44052866567B647DFD75C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>long</remote-name>
            <remote-type>5</remote-type>
            <local-name>[long]</local-name>
            <parent-name>[cleaned_db_data - Edit_for_Tableau.csv]</parent-name>
            <remote-alias>long</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_db_data - Edit_for_Tableau.csv_94D25421F7F44052866567B647DFD75C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lat]</local-name>
            <parent-name>[cleaned_db_data - Edit_for_Tableau.csv]</parent-name>
            <remote-alias>lat</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_db_data - Edit_for_Tableau.csv_94D25421F7F44052866567B647DFD75C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arrivalPlan</remote-name>
            <remote-type>135</remote-type>
            <local-name>[arrivalPlan]</local-name>
            <parent-name>[cleaned_db_data - Edit_for_Tableau.csv]</parent-name>
            <remote-alias>arrivalPlan</remote-alias>
            <ordinal>11</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_db_data - Edit_for_Tableau.csv_94D25421F7F44052866567B647DFD75C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>departurePlan</remote-name>
            <remote-type>135</remote-type>
            <local-name>[departurePlan]</local-name>
            <parent-name>[cleaned_db_data - Edit_for_Tableau.csv]</parent-name>
            <remote-alias>departurePlan</remote-alias>
            <ordinal>12</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_db_data - Edit_for_Tableau.csv_94D25421F7F44052866567B647DFD75C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arrivalChange</remote-name>
            <remote-type>135</remote-type>
            <local-name>[arrivalChange]</local-name>
            <parent-name>[cleaned_db_data - Edit_for_Tableau.csv]</parent-name>
            <remote-alias>arrivalChange</remote-alias>
            <ordinal>13</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_db_data - Edit_for_Tableau.csv_94D25421F7F44052866567B647DFD75C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>departureChange</remote-name>
            <remote-type>135</remote-type>
            <local-name>[departureChange]</local-name>
            <parent-name>[cleaned_db_data - Edit_for_Tableau.csv]</parent-name>
            <remote-alias>departureChange</remote-alias>
            <ordinal>14</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_db_data - Edit_for_Tableau.csv_94D25421F7F44052866567B647DFD75C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arrivaDelayM</remote-name>
            <remote-type>20</remote-type>
            <local-name>[arrivaDelayM]</local-name>
            <parent-name>[cleaned_db_data - Edit_for_Tableau.csv]</parent-name>
            <remote-alias>arrivaDelayM</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_db_data - Edit_for_Tableau.csv_94D25421F7F44052866567B647DFD75C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>departureDelayM</remote-name>
            <remote-type>20</remote-type>
            <local-name>[departureDelayM]</local-name>
            <parent-name>[cleaned_db_data - Edit_for_Tableau.csv]</parent-name>
            <remote-alias>departureDelayM</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_db_data - Edit_for_Tableau.csv_94D25421F7F44052866567B647DFD75C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>info</remote-name>
            <remote-type>129</remote-type>
            <local-name>[info]</local-name>
            <parent-name>[cleaned_db_data - Edit_for_Tableau.csv]</parent-name>
            <remote-alias>info</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_db_data - Edit_for_Tableau.csv_94D25421F7F44052866567B647DFD75C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arrivalDelayCheck</remote-name>
            <remote-type>129</remote-type>
            <local-name>[arrivalDelayCheck]</local-name>
            <parent-name>[cleaned_db_data - Edit_for_Tableau.csv]</parent-name>
            <remote-alias>arrivalDelayCheck</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_db_data - Edit_for_Tableau.csv_94D25421F7F44052866567B647DFD75C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>departureDelayCheck</remote-name>
            <remote-type>129</remote-type>
            <local-name>[departureDelayCheck]</local-name>
            <parent-name>[cleaned_db_data - Edit_for_Tableau.csv]</parent-name>
            <remote-alias>departureDelayCheck</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_db_data - Edit_for_Tableau.csv_94D25421F7F44052866567B647DFD75C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='delayed_filter' datatype='integer' name='[Calculation_1693634994700152833]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [arrivalDelayCheck] = &apos;delay&apos; OR [departureDelayCheck] = &apos;delay&apos; THEN 1 END' />
      </column>
      <column caption='Total_train' datatype='integer' name='[Calculation_1693634994701438980]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT(ID)' />
      </column>
      <column caption='train_delay_rate' datatype='real' name='[Calculation_1693634994701570053]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Calculation_1693634994700152833])/[Calculation_1693634994701438980]*100' />
      </column>
      <column caption='hour' datatype='integer' name='[Calculation_1693634995077197830]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='DATEPART(&apos;hour&apos;, [departurePlan])' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='cleaned_db_data - Edit_for_Tableau.csv' datatype='table' name='[__tableau_internal_object_id__].[cleaned_db_data - Edit_for_Tableau.csv_94D25421F7F44052866567B647DFD75C]' role='measure' type='quantitative' />
      <column datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='train_distribution' datatype='real' name='[train_delay_rate (copy)_1693634995122335752]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([ID])/[Calculation_1693634994701438980]*100' />
      </column>
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[zip]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/hyoni/AppData/Local/Temp/TableauTemp/#TableauTemp_08jv5d61qio97u15du5ek1by3i6o.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='09/10/2024 07:33:56 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ID</remote-alias>
              <ordinal>0</ordinal>
              <family>cleaned_db_data - Edit_for_Tableau.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2061357</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_db_data - Edit_for_Tableau.csv_94D25421F7F44052866567B647DFD75C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>line</remote-name>
              <remote-type>129</remote-type>
              <local-name>[line]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>line</remote-alias>
              <ordinal>1</ordinal>
              <family>cleaned_db_data - Edit_for_Tableau.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>513</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_db_data - Edit_for_Tableau.csv_94D25421F7F44052866567B647DFD75C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>path</remote-name>
              <remote-type>129</remote-type>
              <local-name>[path]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>path</remote-alias>
              <ordinal>2</ordinal>
              <family>cleaned_db_data - Edit_for_Tableau.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>48941</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_db_data - Edit_for_Tableau.csv_94D25421F7F44052866567B647DFD75C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>evaNr</remote-name>
              <remote-type>20</remote-type>
              <local-name>[evaNr]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>evaNr</remote-alias>
              <ordinal>3</ordinal>
              <family>cleaned_db_data - Edit_for_Tableau.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4879</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_db_data - Edit_for_Tableau.csv_94D25421F7F44052866567B647DFD75C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>category</remote-name>
              <remote-type>20</remote-type>
              <local-name>[category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>category</remote-alias>
              <ordinal>4</ordinal>
              <family>cleaned_db_data - Edit_for_Tableau.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_db_data - Edit_for_Tableau.csv_94D25421F7F44052866567B647DFD75C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>station</remote-name>
              <remote-type>129</remote-type>
              <local-name>[station]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>station</remote-alias>
              <ordinal>5</ordinal>
              <family>cleaned_db_data - Edit_for_Tableau.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4879</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_db_data - Edit_for_Tableau.csv_94D25421F7F44052866567B647DFD75C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>state</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>state</remote-alias>
              <ordinal>6</ordinal>
              <family>cleaned_db_data - Edit_for_Tableau.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_db_data - Edit_for_Tableau.csv_94D25421F7F44052866567B647DFD75C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>city</remote-name>
              <remote-type>129</remote-type>
              <local-name>[city]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>city</remote-alias>
              <ordinal>7</ordinal>
              <family>cleaned_db_data - Edit_for_Tableau.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3305</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_db_data - Edit_for_Tableau.csv_94D25421F7F44052866567B647DFD75C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>zip</remote-name>
              <remote-type>20</remote-type>
              <local-name>[zip]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>zip</remote-alias>
              <ordinal>8</ordinal>
              <family>cleaned_db_data - Edit_for_Tableau.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3901</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_db_data - Edit_for_Tableau.csv_94D25421F7F44052866567B647DFD75C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>long</remote-name>
              <remote-type>5</remote-type>
              <local-name>[long]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>long</remote-alias>
              <ordinal>9</ordinal>
              <family>cleaned_db_data - Edit_for_Tableau.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4878</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_db_data - Edit_for_Tableau.csv_94D25421F7F44052866567B647DFD75C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lat</remote-name>
              <remote-type>5</remote-type>
              <local-name>[lat]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>lat</remote-alias>
              <ordinal>10</ordinal>
              <family>cleaned_db_data - Edit_for_Tableau.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4879</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_db_data - Edit_for_Tableau.csv_94D25421F7F44052866567B647DFD75C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>arrivalPlan</remote-name>
              <remote-type>135</remote-type>
              <local-name>[arrivalPlan]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>arrivalPlan</remote-alias>
              <ordinal>11</ordinal>
              <family>cleaned_db_data - Edit_for_Tableau.csv</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>48423</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_db_data - Edit_for_Tableau.csv_94D25421F7F44052866567B647DFD75C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>departurePlan</remote-name>
              <remote-type>135</remote-type>
              <local-name>[departurePlan]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>departurePlan</remote-alias>
              <ordinal>12</ordinal>
              <family>cleaned_db_data - Edit_for_Tableau.csv</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>48672</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_db_data - Edit_for_Tableau.csv_94D25421F7F44052866567B647DFD75C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>arrivalChange</remote-name>
              <remote-type>135</remote-type>
              <local-name>[arrivalChange]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>arrivalChange</remote-alias>
              <ordinal>13</ordinal>
              <family>cleaned_db_data - Edit_for_Tableau.csv</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>50106</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_db_data - Edit_for_Tableau.csv_94D25421F7F44052866567B647DFD75C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>departureChange</remote-name>
              <remote-type>135</remote-type>
              <local-name>[departureChange]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>departureChange</remote-alias>
              <ordinal>14</ordinal>
              <family>cleaned_db_data - Edit_for_Tableau.csv</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>47317</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_db_data - Edit_for_Tableau.csv_94D25421F7F44052866567B647DFD75C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>arrivaDelayM</remote-name>
              <remote-type>20</remote-type>
              <local-name>[arrivaDelayM]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>arrivaDelayM</remote-alias>
              <ordinal>15</ordinal>
              <family>cleaned_db_data - Edit_for_Tableau.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>92</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_db_data - Edit_for_Tableau.csv_94D25421F7F44052866567B647DFD75C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>departureDelayM</remote-name>
              <remote-type>20</remote-type>
              <local-name>[departureDelayM]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>departureDelayM</remote-alias>
              <ordinal>16</ordinal>
              <family>cleaned_db_data - Edit_for_Tableau.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>109</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_db_data - Edit_for_Tableau.csv_94D25421F7F44052866567B647DFD75C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>info</remote-name>
              <remote-type>129</remote-type>
              <local-name>[info]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>info</remote-alias>
              <ordinal>17</ordinal>
              <family>cleaned_db_data - Edit_for_Tableau.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_db_data - Edit_for_Tableau.csv_94D25421F7F44052866567B647DFD75C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>arrivalDelayCheck</remote-name>
              <remote-type>129</remote-type>
              <local-name>[arrivalDelayCheck]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>arrivalDelayCheck</remote-alias>
              <ordinal>18</ordinal>
              <family>cleaned_db_data - Edit_for_Tableau.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_db_data - Edit_for_Tableau.csv_94D25421F7F44052866567B647DFD75C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>departureDelayCheck</remote-name>
              <remote-type>129</remote-type>
              <local-name>[departureDelayCheck]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>departureDelayCheck</remote-alias>
              <ordinal>19</ordinal>
              <family>cleaned_db_data - Edit_for_Tableau.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_db_data - Edit_for_Tableau.csv_94D25421F7F44052866567B647DFD75C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:state:nk]' type='palette'>
            <map to='#807774'>
              <bucket>&quot;Baden-Württemberg&quot;</bucket>
            </map>
            <map to='#807774'>
              <bucket>&quot;Bayern&quot;</bucket>
            </map>
            <map to='#807774'>
              <bucket>&quot;Berlin&quot;</bucket>
            </map>
            <map to='#807774'>
              <bucket>&quot;Hamburg&quot;</bucket>
            </map>
            <map to='#807774'>
              <bucket>&quot;Hessen&quot;</bucket>
            </map>
            <map to='#807774'>
              <bucket>&quot;Nordrhein-Westfalen&quot;</bucket>
            </map>
            <map to='#807774'>
              <bucket>&quot;Rheinland-Pfalz&quot;</bucket>
            </map>
            <map to='#807774'>
              <bucket>&quot;Saarland&quot;</bucket>
            </map>
            <map to='#807774'>
              <bucket>&quot;Sachsen-Anhalt&quot;</bucket>
            </map>
            <map to='#807774'>
              <bucket>&quot;Schleswig-Holstein&quot;</bucket>
            </map>
            <map to='#807774'>
              <bucket>&quot;Thüringen&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;Brandenburg&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;Bremen&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;Mecklenburg-Vorpommern&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;Niedersachsen&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;Sachsen&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='cleaned_db_data - Edit_for_Tableau.csv' id='cleaned_db_data - Edit_for_Tableau.csv_94D25421F7F44052866567B647DFD75C'>
            <properties context=''>
              <relation connection='textscan.0dymbkd09l4ooy1akmzeh13hz6ls' name='cleaned_db_data - Edit_for_Tableau.csv' table='[cleaned_db_data - Edit_for_Tableau#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='ID' ordinal='0' />
                  <column datatype='string' name='line' ordinal='1' />
                  <column datatype='string' name='path' ordinal='2' />
                  <column datatype='integer' name='evaNr' ordinal='3' />
                  <column datatype='integer' name='category' ordinal='4' />
                  <column datatype='string' name='station' ordinal='5' />
                  <column datatype='string' name='state' ordinal='6' />
                  <column datatype='string' name='city' ordinal='7' />
                  <column datatype='integer' name='zip' ordinal='8' />
                  <column datatype='real' name='long' ordinal='9' />
                  <column datatype='real' name='lat' ordinal='10' />
                  <column datatype='datetime' name='arrivalPlan' ordinal='11' />
                  <column datatype='datetime' name='departurePlan' ordinal='12' />
                  <column datatype='datetime' name='arrivalChange' ordinal='13' />
                  <column datatype='datetime' name='departureChange' ordinal='14' />
                  <column datatype='integer' name='arrivaDelayM' ordinal='15' />
                  <column datatype='integer' name='departureDelayM' ordinal='16' />
                  <column datatype='string' name='info' ordinal='17' />
                  <column datatype='string' name='arrivalDelayCheck' ordinal='18' />
                  <column datatype='string' name='departureDelayCheck' ordinal='19' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.1xjxkf00b7ruq41h08w0z0m83ysi'>
      <datasources>
        <datasource caption='cleaned_db_data - Edit_for_Tableau' name='federated.1xjxkf00b7ruq41h08w0z0m83ysi' />
      </datasources>
      <datasource-dependencies datasource='federated.1xjxkf00b7ruq41h08w0z0m83ysi'>
        <column datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
        <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
        <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
        <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:city:nk]'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[none:city:nk]' />
          <groupfilter function='member' level='[none:city:nk]' member='%null%' />
        </groupfilter>
        <target field='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:city:nk]' />
      </filter>
      <filter class='categorical' column='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:state:nk]'>
        <groupfilter function='level-members' level='[none:state:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:state:nk]' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_395BC1B769E2413DBBB5A41B5A4E419E]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='avg_delay_byState' />
      <command command='tsc:brush'>
        <param name='field-captions' value='state' />
        <param name='target' value='avg_delay_byState' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='avg_delay_byState'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_db_data - Edit_for_Tableau' name='federated.1xjxkf00b7ruq41h08w0z0m83ysi' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1xjxkf00b7ruq41h08w0z0m83ysi'>
            <column-instance column='[departureDelayM]' derivation='Avg' name='[avg:departureDelayM:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[departureDelayCheck]' role='dimension' type='nominal' />
            <column datatype='integer' name='[departureDelayM]' role='measure' type='quantitative' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[departureDelayCheck]' derivation='None' name='[none:departureDelayCheck:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:departureDelayCheck:nk]'>
            <groupfilter function='member' level='[none:departureDelayCheck:nk]' member='&quot;delay&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:state:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[avg:departureDelayM:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:state:nk]</column>
            <column>[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:city:nk]</column>
            <column>[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:departureDelayCheck:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[avg:departureDelayM:qk]' scope='cols' value='Avg. Departure Delay (min)' />
            <format attr='stroke-size' scope='cols' value='2' />
            <format attr='stroke-color' scope='cols' value='#d4d4d4' />
            <format attr='tick-color' scope='cols' value='#00000000' />
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:state:nk]' value='28' />
            <format attr='border-color' value='#000000' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
            <format attr='text-format' field='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[avg:departureDelayM:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:state:nk]' value='260' />
            <format attr='band-color' scope='cols' value='#f1f0f0' />
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:state:nk]' value='bold' />
            <format attr='font-size' field='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:state:nk]' value='11' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#f1f0f0' />
            <format attr='background-color' data-class='total' value='#000000' />
            <format attr='background-color' data-class='subtotal' scope='cols' value='#000000' />
            <format attr='border-color' data-class='total' value='#000000' />
            <format attr='border-color' data-class='subtotal' value='#000000' />
            <format attr='border-style' data-class='subtotal' value='solid' />
            <format attr='background-color' data-class='subtotal' scope='rows' value='#00000000' />
            <format attr='background-color' data-class='total' scope='rows' value='#00000000' />
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f1f0f0' />
            <format attr='band-size' scope='cols' value='1' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-color' scope='cols' value='#000000' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='cols' value='1' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='cols' value='#000000' />
            <format attr='line-pattern-only' scope='cols' value='dotted' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='line-pattern-only' scope='rows' value='dotted' />
            <format attr='stroke-color' scope='rows' value='#b4b4b4' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-color' scope='cols' value='#000000' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-color' scope='cols' value='#1b1b1b' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='div-level' scope='rows' value='1' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:state:nk]' />
              <text column='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[avg:departureDelayM:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-color' value='#f13223' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='721' />
                <format attr='maxwidth' value='721' />
                <format attr='minheight' value='448' />
                <format attr='maxheight' value='448' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:state:nk]</rows>
        <cols>[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[avg:departureDelayM:qk]</cols>
      </table>
      <simple-id uuid='{88A54A10-CDF7-4842-9568-17D471789439}' />
    </worksheet>
    <worksheet name='delay_byCity'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_db_data - Edit_for_Tableau' name='federated.1xjxkf00b7ruq41h08w0z0m83ysi' />
          </datasources>
          <datasource-dependencies datasource='federated.1xjxkf00b7ruq41h08w0z0m83ysi'>
            <column caption='delayed_filter' datatype='integer' name='[Calculation_1693634994700152833]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [arrivalDelayCheck] = &apos;delay&apos; OR [departureDelayCheck] = &apos;delay&apos; THEN 1 END' />
            </column>
            <column caption='Total_train' datatype='integer' name='[Calculation_1693634994701438980]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT(ID)' />
            </column>
            <column caption='train_delay_rate' datatype='real' name='[Calculation_1693634994701570053]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_1693634994700152833])/[Calculation_1693634994701438980]*100' />
            </column>
            <column datatype='integer' name='[ID]' role='measure' type='quantitative' />
            <column datatype='string' name='[arrivalDelayCheck]' role='dimension' type='nominal' />
            <column datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[departureDelayCheck]' role='dimension' type='nominal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_1693634994701570053]' derivation='User' name='[usr:Calculation_1693634994701570053:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:city:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[usr:Calculation_1693634994701570053:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:state:nk]</column>
            <column>[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:city:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' scope='cols' value='2' />
            <format attr='stroke-color' scope='cols' value='#d4d4d4' />
            <format attr='tick-color' scope='cols' value='#00000000' />
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-color' value='#000000' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='cols' value='#f1f0f0' />
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#f1f0f0' />
            <format attr='background-color' data-class='total' value='#000000' />
            <format attr='background-color' data-class='subtotal' scope='cols' value='#000000' />
            <format attr='border-color' data-class='total' value='#000000' />
            <format attr='border-color' data-class='subtotal' value='#000000' />
            <format attr='border-style' data-class='subtotal' value='solid' />
            <format attr='background-color' data-class='subtotal' scope='rows' value='#00000000' />
            <format attr='background-color' data-class='total' scope='rows' value='#00000000' />
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f1f0f0' />
            <format attr='band-size' scope='cols' value='1' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-color' scope='cols' value='#000000' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='cols' value='1' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='cols' value='#000000' />
            <format attr='line-pattern-only' scope='cols' value='dotted' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='dotted' />
            <format attr='stroke-color' scope='rows' value='#b4b4b4' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-color' scope='cols' value='#000000' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-color' scope='cols' value='#1b1b1b' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='div-level' scope='rows' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f13223' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:city:nk]</rows>
        <cols>[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[usr:Calculation_1693634994701570053:qk]</cols>
      </table>
      <simple-id uuid='{0D7D182D-3D58-4CEE-B7A2-6699D6C2F99B}' />
    </worksheet>
    <worksheet name='delay_byState'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_db_data - Edit_for_Tableau' name='federated.1xjxkf00b7ruq41h08w0z0m83ysi' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1xjxkf00b7ruq41h08w0z0m83ysi'>
            <column caption='delayed_filter' datatype='integer' name='[Calculation_1693634994700152833]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [arrivalDelayCheck] = &apos;delay&apos; OR [departureDelayCheck] = &apos;delay&apos; THEN 1 END' />
            </column>
            <column caption='Total_train' datatype='integer' name='[Calculation_1693634994701438980]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT(ID)' />
            </column>
            <column caption='train_delay_rate' datatype='real' name='[Calculation_1693634994701570053]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_1693634994700152833])/[Calculation_1693634994701438980]*100' />
            </column>
            <column datatype='integer' name='[ID]' role='measure' type='quantitative' />
            <column datatype='string' name='[arrivalDelayCheck]' role='dimension' type='nominal' />
            <column datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[departureDelayCheck]' role='dimension' type='nominal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_1693634994701570053]' derivation='User' name='[usr:Calculation_1693634994701570053:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:state:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[usr:Calculation_1693634994701570053:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:state:nk]</column>
            <column>[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:city:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' scope='cols' value='2' />
            <format attr='stroke-color' scope='cols' value='#d4d4d4' />
            <format attr='tick-color' scope='cols' value='#00000000' />
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-color' value='#000000' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='cols' value='#f1f0f0' />
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#f1f0f0' />
            <format attr='background-color' data-class='total' value='#000000' />
            <format attr='background-color' data-class='subtotal' scope='cols' value='#000000' />
            <format attr='border-color' data-class='total' value='#000000' />
            <format attr='border-color' data-class='subtotal' value='#000000' />
            <format attr='border-style' data-class='subtotal' value='solid' />
            <format attr='background-color' data-class='subtotal' scope='rows' value='#00000000' />
            <format attr='background-color' data-class='total' scope='rows' value='#00000000' />
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f1f0f0' />
            <format attr='band-size' scope='cols' value='1' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-color' scope='cols' value='#000000' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='cols' value='1' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='cols' value='#000000' />
            <format attr='line-pattern-only' scope='cols' value='dotted' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='dotted' />
            <format attr='stroke-color' scope='rows' value='#b4b4b4' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-color' scope='cols' value='#000000' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-color' scope='cols' value='#1b1b1b' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='div-level' scope='rows' value='1' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f13223' />
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:state:nk]</rows>
        <cols>[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[usr:Calculation_1693634994701570053:qk]</cols>
      </table>
      <simple-id uuid='{116D837C-478A-42DA-9AA4-55CCC92F6BBB}' />
    </worksheet>
    <worksheet name='delay_by_day'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Delay rate by days</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_db_data - Edit_for_Tableau' name='federated.1xjxkf00b7ruq41h08w0z0m83ysi' />
          </datasources>
          <datasource-dependencies datasource='federated.1xjxkf00b7ruq41h08w0z0m83ysi'>
            <column caption='delayed_filter' datatype='integer' name='[Calculation_1693634994700152833]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [arrivalDelayCheck] = &apos;delay&apos; OR [departureDelayCheck] = &apos;delay&apos; THEN 1 END' />
            </column>
            <column caption='Total_train' datatype='integer' name='[Calculation_1693634994701438980]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT(ID)' />
            </column>
            <column caption='train_delay_rate' datatype='real' name='[Calculation_1693634994701570053]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_1693634994700152833])/[Calculation_1693634994701438980]*100' />
            </column>
            <column datatype='integer' name='[ID]' role='measure' type='quantitative' />
            <column datatype='string' name='[arrivalDelayCheck]' role='dimension' type='nominal' />
            <column datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[departureDelayCheck]' role='dimension' type='nominal' />
            <column datatype='datetime' name='[departurePlan]' role='dimension' type='ordinal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_1693634994701570053]' derivation='User' name='[usr:Calculation_1693634994701570053:qk]' pivot='key' type='quantitative' />
            <column-instance column='[departurePlan]' derivation='Weekday' name='[wd:departurePlan:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:city:nk]</column>
            <column>[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' scope='cols' value='2' />
            <format attr='stroke-color' scope='cols' value='#d4d4d4' />
            <format attr='tick-color' scope='cols' value='#00000000' />
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[wd:departurePlan:ok]' value='132' />
            <format attr='border-color' value='#000000' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
            <format attr='color' field='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[wd:departurePlan:ok]' value='#1b1b1b' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='60' />
            <format attr='band-color' scope='cols' value='#f1f0f0' />
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[wd:departurePlan:ok]' value='Tableau Book' />
            <format attr='color' field='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[wd:departurePlan:ok]' value='#555555' />
            <format attr='font-weight' field='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[wd:departurePlan:ok]' value='bold' />
            <format attr='font-weight' field='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[usr:Calculation_1693634994701570053:qk]' value='bold' />
            <format attr='font-size' field='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[usr:Calculation_1693634994701570053:qk]' value='14' />
            <format attr='font-size' field='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[wd:departurePlan:ok]' value='14' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#f1f0f0' />
            <format attr='background-color' data-class='total' value='#000000' />
            <format attr='background-color' data-class='subtotal' scope='cols' value='#000000' />
            <format attr='border-color' data-class='total' value='#000000' />
            <format attr='border-color' data-class='subtotal' value='#000000' />
            <format attr='border-style' data-class='subtotal' value='solid' />
            <format attr='background-color' data-class='subtotal' scope='rows' value='#00000000' />
            <format attr='background-color' data-class='total' scope='rows' value='#00000000' />
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f1f0f0' />
            <format attr='band-size' scope='cols' value='1' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-color' scope='cols' value='#000000' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='cols' value='1' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='cols' value='#000000' />
            <format attr='line-pattern-only' scope='cols' value='dotted' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='dotted' />
            <format attr='stroke-color' scope='rows' value='#b4b4b4' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-color' scope='cols' value='#000000' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-color' scope='cols' value='#1b1b1b' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='div-level' scope='rows' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.75762432813644409' />
                <format attr='mark-color' value='#f13223' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='389' />
                <format attr='maxheight' value='389' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[usr:Calculation_1693634994701570053:qk]</rows>
        <cols>[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[wd:departurePlan:ok]</cols>
      </table>
      <simple-id uuid='{17D90242-FFE5-407C-A3FA-A60739C3C935}' />
    </worksheet>
    <worksheet name='delay_rate_by_time'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_db_data - Edit_for_Tableau' name='federated.1xjxkf00b7ruq41h08w0z0m83ysi' />
          </datasources>
          <datasource-dependencies datasource='federated.1xjxkf00b7ruq41h08w0z0m83ysi'>
            <column caption='delayed_filter' datatype='integer' name='[Calculation_1693634994700152833]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [arrivalDelayCheck] = &apos;delay&apos; OR [departureDelayCheck] = &apos;delay&apos; THEN 1 END' />
            </column>
            <column caption='Total_train' datatype='integer' name='[Calculation_1693634994701438980]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT(ID)' />
            </column>
            <column caption='train_delay_rate' datatype='real' name='[Calculation_1693634994701570053]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_1693634994700152833])/[Calculation_1693634994701438980]*100' />
            </column>
            <column caption='hour' datatype='integer' name='[Calculation_1693634995077197830]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEPART(&apos;hour&apos;, [departurePlan])' />
            </column>
            <column datatype='integer' name='[ID]' role='measure' type='quantitative' />
            <column datatype='string' name='[arrivalDelayCheck]' role='dimension' type='nominal' />
            <column datatype='datetime' name='[arrivalPlan]' role='dimension' type='ordinal' />
            <column datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[departureDelayCheck]' role='dimension' type='nominal' />
            <column datatype='datetime' name='[departurePlan]' role='dimension' type='ordinal' />
            <column-instance column='[arrivalPlan]' derivation='Hour' name='[hr:arrivalPlan:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1693634995077197830]' derivation='None' name='[none:Calculation_1693634995077197830:qk]' pivot='key' type='quantitative' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_1693634994701570053]' derivation='User' name='[usr:Calculation_1693634994701570053:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[hr:arrivalPlan:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[hr:arrivalPlan:ok]' />
              <groupfilter function='member' level='[hr:arrivalPlan:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[hr:arrivalPlan:ok]</column>
            <column>[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:state:nk]</column>
            <column>[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:city:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:Calculation_1693634995077197830:qk]' field-type='quantitative' max='24' min='0' range-type='fixed' scope='cols' type='space' />
            <format attr='stroke-size' scope='cols' value='2' />
            <format attr='stroke-color' scope='cols' value='#d4d4d4' />
            <format attr='tick-color' scope='cols' value='#00000000' />
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='title' class='0' field='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[usr:Calculation_1693634994701570053:qk]' scope='rows' value='Delay rate %' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-color' value='#000000' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='cols' value='#f1f0f0' />
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:Calculation_1693634995077197830:qk]' value='bold' />
            <format attr='font-size' field='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:Calculation_1693634995077197830:qk]' value='14' />
            <format attr='font-weight' field='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[usr:Calculation_1693634994701570053:qk]' value='bold' />
            <format attr='font-size' field='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[usr:Calculation_1693634994701570053:qk]' value='14' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#f1f0f0' />
            <format attr='background-color' data-class='total' value='#000000' />
            <format attr='background-color' data-class='subtotal' scope='cols' value='#000000' />
            <format attr='border-color' data-class='total' value='#000000' />
            <format attr='border-color' data-class='subtotal' value='#000000' />
            <format attr='border-style' data-class='subtotal' value='solid' />
            <format attr='background-color' data-class='subtotal' scope='rows' value='#00000000' />
            <format attr='background-color' data-class='total' scope='rows' value='#00000000' />
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f1f0f0' />
            <format attr='band-size' scope='cols' value='1' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-color' scope='cols' value='#000000' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='cols' value='1' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='cols' value='#000000' />
            <format attr='line-pattern-only' scope='cols' value='dotted' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='dotted' />
            <format attr='stroke-color' scope='rows' value='#b4b4b4' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-color' scope='cols' value='#000000' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-color' scope='cols' value='#1b1b1b' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='div-level' scope='rows' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f13223' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[usr:Calculation_1693634994701570053:qk]</rows>
        <cols>[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:Calculation_1693634995077197830:qk]</cols>
      </table>
      <simple-id uuid='{0BB1DE26-D7CE-4A84-BD17-417EF70C38C4}' />
    </worksheet>
    <worksheet name='geo_construction_work'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_db_data - Edit_for_Tableau' name='federated.1xjxkf00b7ruq41h08w0z0m83ysi' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1xjxkf00b7ruq41h08w0z0m83ysi'>
            <column caption='delayed_filter' datatype='integer' name='[Calculation_1693634994700152833]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [arrivalDelayCheck] = &apos;delay&apos; OR [departureDelayCheck] = &apos;delay&apos; THEN 1 END' />
            </column>
            <column caption='Total_train' datatype='integer' name='[Calculation_1693634994701438980]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT(ID)' />
            </column>
            <column caption='train_delay_rate' datatype='real' name='[Calculation_1693634994701570053]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_1693634994700152833])/[Calculation_1693634994701438980]*100' />
            </column>
            <column datatype='integer' name='[ID]' role='measure' type='quantitative' />
            <column datatype='string' name='[arrivalDelayCheck]' role='dimension' type='nominal' />
            <column datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[departureDelayCheck]' role='dimension' type='nominal' />
            <column datatype='string' name='[info]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[info]' derivation='None' name='[none:info:nk]' pivot='key' type='nominal' />
            <column-instance column='[lat]' derivation='None' name='[none:lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[long]' derivation='None' name='[none:long:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[station]' derivation='None' name='[none:station:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[station]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1693634994701570053]' derivation='User' name='[usr:Calculation_1693634994701570053:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:info:nk]'>
            <groupfilter function='member' level='[none:info:nk]' member='&quot;Bauarbeiten. (Quelle: zuginfo.nrw)&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:city:nk]</column>
            <column>[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:state:nk]</column>
            <column>[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:info:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:long:qk]' field-type='quantitative' max='2990664.7783668269' min='-377562.18639082788' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:lat:qk]' field-type='quantitative' max='7407451.1639107931' min='5629408.3823777223' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[usr:Calculation_1693634994701570053:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Heatmap' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[usr:Calculation_1693634994701570053:qk]' />
              <text column='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:state:nk]' />
              <lod column='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:station:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='density-intensity' value='0.64374065399169922' />
                <encoding attr='density-color' palette='density_light_multicolor' type='interpolated' />
                <format attr='density-kernel-size' value='1.813093900680542' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='has-stroke' value='true' />
                <format attr='mark-transparency' value='167' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:lat:qk]</rows>
        <cols>[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:long:qk]</cols>
      </table>
      <simple-id uuid='{47973F0E-3BB4-4C16-99B1-4E65AF44D79F}' />
    </worksheet>
    <worksheet name='geo_delay_rate'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_db_data - Edit_for_Tableau' name='federated.1xjxkf00b7ruq41h08w0z0m83ysi' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1xjxkf00b7ruq41h08w0z0m83ysi'>
            <column caption='delayed_filter' datatype='integer' name='[Calculation_1693634994700152833]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [arrivalDelayCheck] = &apos;delay&apos; OR [departureDelayCheck] = &apos;delay&apos; THEN 1 END' />
            </column>
            <column caption='Total_train' datatype='integer' name='[Calculation_1693634994701438980]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT(ID)' />
            </column>
            <column caption='train_delay_rate' datatype='real' name='[Calculation_1693634994701570053]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_1693634994700152833])/[Calculation_1693634994701438980]*100' />
            </column>
            <column datatype='integer' name='[ID]' role='measure' type='quantitative' />
            <column datatype='string' name='[arrivalDelayCheck]' role='dimension' type='nominal' />
            <column datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[departureDelayCheck]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[lat]' derivation='None' name='[none:lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[long]' derivation='None' name='[none:long:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[station]' derivation='None' name='[none:station:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[station]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1693634994701570053]' derivation='User' name='[usr:Calculation_1693634994701570053:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[usr:Calculation_1693634994701570053:qk]' included-values='in-range' />
          <slices>
            <column>[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:city:nk]</column>
            <column>[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:state:nk]</column>
            <column>[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[usr:Calculation_1693634994701570053:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:long:qk]' field-type='quantitative' max='2990664.7783668269' min='-377562.18639082788' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:lat:qk]' field-type='quantitative' max='7407451.1639107931' min='5629408.3823777223' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[usr:Calculation_1693634994701570053:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Heatmap' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[usr:Calculation_1693634994701570053:qk]' />
              <text column='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:state:nk]' />
              <lod column='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:station:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='density-intensity' value='0.51836109161376953' />
                <encoding attr='density-color' palette='density_light_multicolor' type='interpolated' />
                <format attr='density-kernel-size' value='1.813093900680542' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-transparency' value='185' />
                <format attr='has-stroke' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:lat:qk]</rows>
        <cols>[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:long:qk]</cols>
      </table>
      <simple-id uuid='{F51DEC9A-2669-4808-85C2-17CD23B3343B}' />
    </worksheet>
    <worksheet name='train_distribution_by_day'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Train schedule Distribution by weekdays</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_db_data - Edit_for_Tableau' name='federated.1xjxkf00b7ruq41h08w0z0m83ysi' />
          </datasources>
          <datasource-dependencies datasource='federated.1xjxkf00b7ruq41h08w0z0m83ysi'>
            <column datatype='integer' name='[ID]' role='measure' type='quantitative' />
            <column datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[ID]' derivation='Count' name='[cnt:ID:qk]' pivot='key' type='quantitative' />
            <column datatype='datetime' name='[departurePlan]' role='dimension' type='ordinal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[departurePlan]' derivation='Weekday' name='[wd:departurePlan:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:city:nk]</column>
            <column>[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='auto-subtitle' class='0' field='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[cnt:ID:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[cnt:ID:qk]' scope='rows' value='# Train' />
            <format attr='stroke-size' scope='cols' value='2' />
            <format attr='stroke-color' scope='cols' value='#d4d4d4' />
            <format attr='tick-color' scope='cols' value='#00000000' />
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[wd:departurePlan:ok]' value='136' />
            <format attr='border-color' value='#000000' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
            <format attr='color' field='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[cnt:ID:qk]' value='#333333' />
            <format attr='color' field='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[wd:departurePlan:ok]' value='#1b1b1b' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='60' />
            <format attr='band-color' scope='cols' value='#f1f0f0' />
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[wd:departurePlan:ok]' value='Tableau Book' />
            <format attr='color' field='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[cnt:ID:qk]' value='#555555' />
            <format attr='color' field='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[wd:departurePlan:ok]' value='#555555' />
            <format attr='font-weight' field='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[wd:departurePlan:ok]' value='bold' />
            <format attr='font-weight' field='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[cnt:ID:qk]' value='bold' />
            <format attr='font-size' field='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[wd:departurePlan:ok]' value='14' />
            <format attr='font-size' field='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[cnt:ID:qk]' value='14' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#f1f0f0' />
            <format attr='background-color' data-class='total' value='#000000' />
            <format attr='background-color' data-class='subtotal' scope='cols' value='#000000' />
            <format attr='border-color' data-class='total' value='#000000' />
            <format attr='border-color' data-class='subtotal' value='#000000' />
            <format attr='border-style' data-class='subtotal' value='solid' />
            <format attr='background-color' data-class='subtotal' scope='rows' value='#00000000' />
            <format attr='background-color' data-class='total' scope='rows' value='#00000000' />
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f1f0f0' />
            <format attr='band-size' scope='cols' value='1' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-color' scope='cols' value='#000000' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='cols' value='1' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='cols' value='#000000' />
            <format attr='line-pattern-only' scope='cols' value='dotted' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='dotted' />
            <format attr='stroke-color' scope='rows' value='#b4b4b4' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-color' scope='cols' value='#000000' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-color' scope='cols' value='#1b1b1b' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='div-level' scope='rows' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.75762432813644409' />
                <format attr='mark-color' value='#f13223' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='389' />
                <format attr='maxheight' value='389' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[cnt:ID:qk]</rows>
        <cols>[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[wd:departurePlan:ok]</cols>
      </table>
      <simple-id uuid='{999DDBCA-8273-4CDF-9D72-113644767A95}' />
    </worksheet>
    <worksheet name='train_distribution_bytime'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_db_data - Edit_for_Tableau' name='federated.1xjxkf00b7ruq41h08w0z0m83ysi' />
          </datasources>
          <datasource-dependencies datasource='federated.1xjxkf00b7ruq41h08w0z0m83ysi'>
            <column caption='hour' datatype='integer' name='[Calculation_1693634995077197830]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEPART(&apos;hour&apos;, [departurePlan])' />
            </column>
            <column datatype='integer' name='[ID]' role='measure' type='quantitative' />
            <column datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[ID]' derivation='Count' name='[cnt:ID:qk]' pivot='key' type='quantitative' />
            <column datatype='datetime' name='[departurePlan]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1693634995077197830]' derivation='None' name='[none:Calculation_1693634995077197830:qk]' pivot='key' type='quantitative' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:city:nk]</column>
            <column>[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:Calculation_1693634995077197830:qk]' field-type='quantitative' max='23' min='0' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:Calculation_1693634995077197830:qk]' scope='cols' value='' />
            <format attr='stroke-size' scope='cols' value='2' />
            <format attr='stroke-color' scope='cols' value='#d4d4d4' />
            <format attr='tick-color' scope='cols' value='#00000000' />
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='height' field='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:Calculation_1693634995077197830:qk]' value='201' />
            <format attr='title' class='0' field='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[cnt:ID:qk]' scope='rows' value='# Train' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-color' value='#000000' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
            <format attr='color' field='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[cnt:ID:qk]' value='#333333' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='cols' value='#f1f0f0' />
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[cnt:ID:qk]' value='#555555' />
            <format attr='font-weight' field='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[cnt:ID:qk]' value='bold' />
            <format attr='font-size' field='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[cnt:ID:qk]' value='14' />
            <format attr='font-weight' field='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:Calculation_1693634995077197830:qk]' value='bold' />
            <format attr='font-size' field='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:Calculation_1693634995077197830:qk]' value='14' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#f1f0f0' />
            <format attr='background-color' data-class='total' value='#000000' />
            <format attr='background-color' data-class='subtotal' scope='cols' value='#000000' />
            <format attr='border-color' data-class='total' value='#000000' />
            <format attr='border-color' data-class='subtotal' value='#000000' />
            <format attr='border-style' data-class='subtotal' value='solid' />
            <format attr='background-color' data-class='subtotal' scope='rows' value='#00000000' />
            <format attr='background-color' data-class='total' scope='rows' value='#00000000' />
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f1f0f0' />
            <format attr='band-size' scope='cols' value='1' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-color' scope='cols' value='#000000' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='cols' value='1' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='cols' value='#000000' />
            <format attr='line-pattern-only' scope='cols' value='dotted' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='dotted' />
            <format attr='stroke-color' scope='rows' value='#b4b4b4' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-color' scope='cols' value='#000000' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-color' scope='cols' value='#1b1b1b' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='div-level' scope='rows' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f13223' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='352' />
                <format attr='maxheight' value='352' />
                <format attr='minwidth' value='1138' />
                <format attr='maxwidth' value='1138' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[cnt:ID:qk]</rows>
        <cols>[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:Calculation_1693634995077197830:qk]</cols>
      </table>
      <simple-id uuid='{B589BC04-C6F6-4816-ABEF-B2E49B185295}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='train_distribution_by_day'>
      <cards>
        <edge name='left'>
          <strip size='101'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='19'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{1EA09E38-5902-4A92-AC95-6E332C35172B}' />
    </window>
    <window class='worksheet' name='delay_by_day'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='19'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{5B85B350-071C-49B1-AC53-72ACB14C547A}' />
    </window>
    <window class='worksheet' name='train_distribution_bytime'>
      <cards>
        <edge name='left'>
          <strip size='102'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='19'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{F4E28D95-880C-40B0-86D8-90BE8B4E9B25}' />
    </window>
    <window class='worksheet' name='delay_rate_by_time'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card param='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:state:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{DA5253E3-D370-4205-992E-4569DAD0AB58}' />
    </window>
    <window class='worksheet' name='delay_byState'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:state:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{AE884F91-A953-4CE0-81E3-02ED912060A4}' />
    </window>
    <window class='worksheet' name='avg_delay_byState'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:state:nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:state:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{A8ED64C7-2400-4764-8869-6ED24264D9F9}' />
    </window>
    <window class='worksheet' name='delay_byCity'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{450C698F-918D-4723-B059-23BC57CF0463}' />
    </window>
    <window class='worksheet' name='geo_delay_rate'>
      <cards>
        <edge name='left'>
          <strip size='102'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='19'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card param='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:state:nk]' type='filter' />
            <card param='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[usr:Calculation_1693634994701570053:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{65B32673-482A-4EB3-96E9-1B454DAE0032}' />
    </window>
    <window class='worksheet' maximized='true' name='geo_construction_work'>
      <cards>
        <edge name='left'>
          <strip size='170'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='18'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card param='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:info:nk]' type='filter' />
            <card param='[federated.1xjxkf00b7ruq41h08w0z0m83ysi].[none:state:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{C2F93D28-B170-45E0-A954-444A80773064}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='avg_delay_byState' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='delay_byCity' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='delay_byState' width='192'>
      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
      /4oAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='delay_rate_by_time' width='192'>
      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
      ibAr5gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='geo_construction_work' width='192'>
      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
      oBuwVM7/AT5cb6bwjQGUAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='geo_delay_rate' width='192'>
      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
      VLVcQ1Xz/P8DesVQMtS46PwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='train_distribution_by_day' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='train_distribution_bytime' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
